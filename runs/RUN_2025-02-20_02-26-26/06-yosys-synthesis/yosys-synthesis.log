
 /----------------------------------------------------------------------------\
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |  Copyright (C) 2012 - 2024  Claire Xenia Wolf <claire@yosyshq.com>         |
 |  Distributed under an ISC-like license, type "license" to see terms        |
 \----------------------------------------------------------------------------/
 Yosys 0.46 (git sha1 e97731b9dda91fa5fa53ed87df7c34163ba59a41, clang++ 17.0.6 -fPIC -O3)
Loaded SDC plugin

1. Executing Liberty frontend: /home/lroot/.volare/volare/sky130/versions/0fe599b2afb6708d281543108caf8310912f54af/sky130A/libs.ref/sky130_fd_sc_hd/lib/sky130_fd_sc_hd__tt_025C_1v80.lib
Imported 428 cell types from liberty file.
[INFO] Using SDC file '/home/lroot/count/runs/RUN_2025-02-20_02-26-26/06-yosys-synthesis/synthesis.abc.sdc' for ABCâ€¦

2. Executing Verilog-2005 frontend: /home/lroot/count/count.v
Parsing SystemVerilog input from `/home/lroot/count/count.v' to AST representation.
Storing AST representation for module `$abstract\counter_8bit'.
Successfully finished Verilog frontend.

3. Executing HIERARCHY pass (managing design hierarchy).

4. Executing AST frontend in derive mode using pre-parsed AST for module `\counter_8bit'.
Generating RTLIL representation for module `\counter_8bit'.

4.1. Analyzing design hierarchy..
Top module:  \counter_8bit

4.2. Analyzing design hierarchy..
Top module:  \counter_8bit
Removing unused module `$abstract\counter_8bit'.
Removed 1 unused modules.
Renaming module counter_8bit to counter_8bit.

5. Generating Graphviz representation of design.
Writing dot description to `/home/lroot/count/runs/RUN_2025-02-20_02-26-26/06-yosys-synthesis/hierarchy.dot'.
Dumping module counter_8bit to page 1.

6. Executing TRIBUF pass.

7. Executing HIERARCHY pass (managing design hierarchy).

7.1. Analyzing design hierarchy..
Top module:  \counter_8bit

7.2. Analyzing design hierarchy..
Top module:  \counter_8bit
Removed 0 unused modules.

8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

9. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/lroot/count/count.v:10$4 in module counter_8bit.
Removed a total of 0 dead cases.

10. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 1 redundant assignment.
Promoted 1 assignment to connection.

11. Executing PROC_INIT pass (extract init attributes).

12. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \rst in `\counter_8bit.$proc$/home/lroot/count/count.v:10$4'.

13. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

14. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\counter_8bit.$proc$sine_table.vh:1$6'.
Creating decoders for process `\counter_8bit.$proc$/home/lroot/count/count.v:10$4'.
     1/1: $0\tcount[7:0]

15. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\counter_8bit.\sine_table' from process `\counter_8bit.$proc$sine_table.vh:1$6'.

16. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\counter_8bit.\tcount' using process `\counter_8bit.$proc$/home/lroot/count/count.v:10$4'.
  created $adff cell `$procdff$9' with positive edge clock and positive level reset.

17. Executing PROC_MEMWR pass (convert process memory writes to cells).

18. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `counter_8bit.$proc$sine_table.vh:1$6'.
Removing empty process `counter_8bit.$proc$/home/lroot/count/count.v:10$4'.
Cleaned up 0 empty switches.

19. Executing CHECK pass (checking for obvious problems).
Checking module counter_8bit...
Found and reported 0 problems.

20. Executing OPT_EXPR pass (perform const folding).
Optimizing module counter_8bit.
<suppressed ~3 debug messages>

21. Executing FLATTEN pass (flatten design).

22. Executing OPT_EXPR pass (perform const folding).
Optimizing module counter_8bit.

23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \counter_8bit..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

24. Executing OPT_EXPR pass (perform const folding).
Optimizing module counter_8bit.

25. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\counter_8bit'.
Removed a total of 0 cells.

26. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \counter_8bit..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

27. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \counter_8bit.
Performed a total of 0 changes.

28. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\counter_8bit'.
Removed a total of 0 cells.

29. Executing OPT_DFF pass (perform DFF optimizations).

30. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \counter_8bit..

31. Executing OPT_EXPR pass (perform const folding).
Optimizing module counter_8bit.

32. Executing FSM pass (extract and optimize FSM).

32.1. Executing FSM_DETECT pass (finding FSMs in design).

32.2. Executing FSM_EXTRACT pass (extracting FSM from design).

32.3. Executing FSM_OPT pass (simple optimizations of FSMs).

32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \counter_8bit..

32.5. Executing FSM_OPT pass (simple optimizations of FSMs).

32.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

32.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

32.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

33. Executing OPT_EXPR pass (perform const folding).
Optimizing module counter_8bit.

34. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\counter_8bit'.
Removed a total of 0 cells.

35. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \counter_8bit..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

36. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \counter_8bit.
Performed a total of 0 changes.

37. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\counter_8bit'.
Removed a total of 0 cells.

38. Executing OPT_DFF pass (perform DFF optimizations).

39. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \counter_8bit..

40. Executing OPT_EXPR pass (perform const folding).
Optimizing module counter_8bit.

41. Executing WREDUCE pass (reducing word size of cells).
Removed top 24 bits (of 32) from port A of cell counter_8bit.$sub$/home/lroot/count/count.v:0$1 ($sub).
Removed top 23 bits (of 32) from port Y of cell counter_8bit.$sub$/home/lroot/count/count.v:0$1 ($sub).
Removed top 19 bits (of 32) from port B of cell counter_8bit.$shiftx$/home/lroot/count/count.v:0$3 ($shiftx).
Removed top 31 bits (of 32) from port B of cell counter_8bit.$add$/home/lroot/count/count.v:15$5 ($add).
Removed top 24 bits (of 32) from port Y of cell counter_8bit.$add$/home/lroot/count/count.v:15$5 ($add).
Removed top 4 bits (of 32) from wire counter_8bit.$sub$/home/lroot/count/count.v:0$1_Y.

42. Executing PEEPOPT pass (run peephole optimizers).

43. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \counter_8bit..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

44. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module counter_8bit:
  creating $macc model for $add$/home/lroot/count/count.v:15$5 ($add).
  creating $macc model for $sub$/home/lroot/count/count.v:0$1 ($sub).
  creating $alu model for $macc $sub$/home/lroot/count/count.v:0$1.
  creating $alu model for $macc $add$/home/lroot/count/count.v:15$5.
  creating $alu cell for $add$/home/lroot/count/count.v:15$5: $auto$alumacc.cc:485:replace_alu$11
  creating $alu cell for $sub$/home/lroot/count/count.v:0$1: $auto$alumacc.cc:485:replace_alu$14
  created 2 $alu and 0 $macc cells.

45. Executing SHARE pass (SAT-based resource sharing).

46. Executing OPT_EXPR pass (perform const folding).
Optimizing module counter_8bit.

47. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\counter_8bit'.
Removed a total of 0 cells.

48. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \counter_8bit..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

49. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \counter_8bit.
Performed a total of 0 changes.

50. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\counter_8bit'.
Removed a total of 0 cells.

51. Executing OPT_DFF pass (perform DFF optimizations).

52. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \counter_8bit..

53. Executing OPT_EXPR pass (perform const folding).
Optimizing module counter_8bit.

54. Executing MEMORY pass.

54.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

54.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

54.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

54.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

54.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

54.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \counter_8bit..

54.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

54.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

54.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \counter_8bit..

54.10. Executing MEMORY_COLLECT pass (generating $mem cells).

55. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \counter_8bit..

56. Executing OPT_EXPR pass (perform const folding).
Optimizing module counter_8bit.
<suppressed ~4 debug messages>

57. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\counter_8bit'.
Removed a total of 0 cells.

58. Executing OPT_DFF pass (perform DFF optimizations).

59. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \counter_8bit..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

60. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

61. Executing OPT_EXPR pass (perform const folding).
Optimizing module counter_8bit.

62. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\counter_8bit'.
Removed a total of 0 cells.

63. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \counter_8bit..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

64. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \counter_8bit.
Performed a total of 0 changes.

65. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\counter_8bit'.
Removed a total of 0 cells.

66. Executing OPT_SHARE pass.

67. Executing OPT_DFF pass (perform DFF optimizations).

68. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \counter_8bit..

69. Executing OPT_EXPR pass (perform const folding).
Optimizing module counter_8bit.

70. Executing TECHMAP pass (map to technology primitives).

70.1. Executing Verilog-2005 frontend: /nix/store/c26m31cifv9fyym8p72j6cj5ilqgnh2z-yosys/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nix/store/c26m31cifv9fyym8p72j6cj5ilqgnh2z-yosys/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

70.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $not.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_90_alu for cells of type $alu.
Using template $paramod$constmap:353f3e64a0dc9e3c5c2da4e44dd35ed7159e52c1$paramod$b236e9f91f973882665bb841721e2e806de51492\_90_shift_shiftx for cells of type $shiftx.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $and.
Using template $paramod\_90_lcu_brent_kung\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $or.
No more expansions possible.
<suppressed ~4563 debug messages>

71. Executing OPT_EXPR pass (perform const folding).
Optimizing module counter_8bit.
<suppressed ~105566 debug messages>

72. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\counter_8bit'.
<suppressed ~22932 debug messages>
Removed a total of 7644 cells.

73. Executing OPT_DFF pass (perform DFF optimizations).

74. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \counter_8bit..
Removed 17320 unused cells and 58 unused wires.
<suppressed ~17321 debug messages>

75. Executing OPT_EXPR pass (perform const folding).
Optimizing module counter_8bit.
<suppressed ~9 debug messages>

76. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\counter_8bit'.
Removed a total of 0 cells.

77. Executing OPT_DFF pass (perform DFF optimizations).

78. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \counter_8bit..

79. Executing ABC pass (technology mapping using ABC).

79.1. Extracting gate netlist of module `\counter_8bit' to `<abc-temp-dir>/input.blif'..
Extracted 611 gates and 621 wires to a netlist network with 8 inputs and 24 outputs.

79.1.1. Executing ABC.
Running ABC command: "/nix/store/6l3aj1gi4lja8z5s4lan2k2cfz9mqkrz-yosys-abc/bin/abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

79.1.2. Re-integrating ABC results.
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               NOT cells:        8
ABC RESULTS:             ORNOT cells:        5
ABC RESULTS:               NOR cells:        4
ABC RESULTS:               MUX cells:      494
ABC RESULTS:                OR cells:       39
ABC RESULTS:               AND cells:        5
ABC RESULTS:              NAND cells:        6
ABC RESULTS:            ANDNOT cells:       45
ABC RESULTS:               XOR cells:        7
ABC RESULTS:        internal signals:      589
ABC RESULTS:           input signals:        8
ABC RESULTS:          output signals:       24
Removing temp directory.

80. Executing OPT pass (performing simple optimizations).

80.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module counter_8bit.
<suppressed ~349 debug messages>

80.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\counter_8bit'.
Removed a total of 0 cells.

80.3. Executing OPT_DFF pass (perform DFF optimizations).

80.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \counter_8bit..
Removed 1 unused cells and 43 unused wires.
<suppressed ~2 debug messages>

80.5. Finished fast OPT passes.

81. Executing HIERARCHY pass (managing design hierarchy).

81.1. Analyzing design hierarchy..
Top module:  \counter_8bit

81.2. Analyzing design hierarchy..
Top module:  \counter_8bit
Removed 0 unused modules.

82. Executing CHECK pass (checking for obvious problems).
Checking module counter_8bit...
Found and reported 0 problems.

83. Printing statistics.

=== counter_8bit ===

   Number of wires:                596
   Number of wire bits:           4727
   Number of public wires:           5
   Number of public wire bits:    4122
   Number of ports:                  3
   Number of port bits:             18
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                621
     $_ANDNOT_                      45
     $_AND_                          5
     $_DFF_PP0_                      8
     $_MUX_                        494
     $_NAND_                         6
     $_NOR_                          4
     $_NOT_                          7
     $_ORNOT_                        5
     $_OR_                          39
     $_XNOR_                         1
     $_XOR_                          7

84. Generating Graphviz representation of design.
Writing dot description to `/home/lroot/count/runs/RUN_2025-02-20_02-26-26/06-yosys-synthesis/primitive_techmap.dot'.
Dumping module counter_8bit to page 1.

85. Executing OPT pass (performing simple optimizations).

85.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module counter_8bit.

85.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\counter_8bit'.
Removed a total of 0 cells.

85.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \counter_8bit..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

85.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \counter_8bit.
Performed a total of 0 changes.

85.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\counter_8bit'.
Removed a total of 0 cells.

85.6. Executing OPT_DFF pass (perform DFF optimizations).

85.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \counter_8bit..

85.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module counter_8bit.

85.9. Finished OPT passes. (There is nothing left to do.)

86. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \counter_8bit..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>
{
   "creator": "Yosys 0.46 (git sha1 e97731b9dda91fa5fa53ed87df7c34163ba59a41, clang++ 17.0.6 -fPIC -O3)",
   "invocation": "stat -json -liberty /home/lroot/count/runs/RUN_2025-02-20_02-26-26/tmp/82f433987e354a1c9e1732cdc8ef5a53.lib ",
   "modules": {
      "\\counter_8bit": {
         "num_wires":         595,
         "num_wire_bits":     631,
         "num_pub_wires":     4,
         "num_pub_wire_bits": 26,
         "num_ports":         3,
         "num_port_bits":     18,
         "num_memories":      0,
         "num_memory_bits":   0,
         "num_processes":     0,
         "num_cells":         621,
         "num_cells_by_type": {
            "$_ANDNOT_": 45,
            "$_AND_": 5,
            "$_DFF_PP0_": 8,
            "$_MUX_": 494,
            "$_NAND_": 6,
            "$_NOR_": 4,
            "$_NOT_": 7,
            "$_ORNOT_": 5,
            "$_OR_": 39,
            "$_XNOR_": 1,
            "$_XOR_": 7
         }
      }
   },
      "design": {
         "num_wires":         595,
         "num_wire_bits":     631,
         "num_pub_wires":     4,
         "num_pub_wire_bits": 26,
         "num_ports":         3,
         "num_port_bits":     18,
         "num_memories":      0,
         "num_memory_bits":   0,
         "num_processes":     0,
         "num_cells":         621,
         "num_cells_by_type": {
            "$_ANDNOT_": 45,
            "$_AND_": 5,
            "$_DFF_PP0_": 8,
            "$_MUX_": 494,
            "$_NAND_": 6,
            "$_NOR_": 4,
            "$_NOT_": 7,
            "$_ORNOT_": 5,
            "$_OR_": 39,
            "$_XNOR_": 1,
            "$_XOR_": 7
         }
      }
}

87. Printing statistics.

=== counter_8bit ===

   Number of wires:                595
   Number of wire bits:            631
   Number of public wires:           4
   Number of public wire bits:      26
   Number of ports:                  3
   Number of port bits:             18
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                621
     $_ANDNOT_                      45
     $_AND_                          5
     $_DFF_PP0_                      8
     $_MUX_                        494
     $_NAND_                         6
     $_NOR_                          4
     $_NOT_                          7
     $_ORNOT_                        5
     $_OR_                          39
     $_XNOR_                         1
     $_XOR_                          7

   Area for cell type $_NOT_ is unknown!
   Area for cell type $_AND_ is unknown!
   Area for cell type $_NAND_ is unknown!
   Area for cell type $_OR_ is unknown!
   Area for cell type $_NOR_ is unknown!
   Area for cell type $_XOR_ is unknown!
   Area for cell type $_XNOR_ is unknown!
   Area for cell type $_ANDNOT_ is unknown!
   Area for cell type $_ORNOT_ is unknown!
   Area for cell type $_MUX_ is unknown!
   Area for cell type $_DFF_PP0_ is unknown!

[INFO] Applying tri-state buffer mapping from '/home/lroot/.volare/volare/sky130/versions/0fe599b2afb6708d281543108caf8310912f54af/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v'â€¦

88. Executing TECHMAP pass (map to technology primitives).

88.1. Executing Verilog-2005 frontend: /home/lroot/.volare/volare/sky130/versions/0fe599b2afb6708d281543108caf8310912f54af/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v
Parsing Verilog input from `/home/lroot/.volare/volare/sky130/versions/0fe599b2afb6708d281543108caf8310912f54af/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v' to AST representation.
Generating RTLIL representation for module `\$_TBUF_'.
Successfully finished Verilog frontend.

88.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

89. Executing SIMPLEMAP pass (map simple cells to gate primitives).
[INFO] Applying latch mapping from '/home/lroot/.volare/volare/sky130/versions/0fe599b2afb6708d281543108caf8310912f54af/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v'â€¦

90. Executing TECHMAP pass (map to technology primitives).

90.1. Executing Verilog-2005 frontend: /home/lroot/.volare/volare/sky130/versions/0fe599b2afb6708d281543108caf8310912f54af/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v
Parsing Verilog input from `/home/lroot/.volare/volare/sky130/versions/0fe599b2afb6708d281543108caf8310912f54af/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Successfully finished Verilog frontend.

90.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

91. Executing SIMPLEMAP pass (map simple cells to gate primitives).

92. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell sky130_fd_sc_hd__dfxtp_2 (noninv, pins=3, area=21.27) is a direct match for cell type $_DFF_P_.
  cell sky130_fd_sc_hd__dfrtp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN0_.
  cell sky130_fd_sc_hd__dfstp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN1_.
  cell sky130_fd_sc_hd__dfbbn_2 (noninv, pins=6, area=35.03) is a direct match for cell type $_DFFSR_NNN_.
  final dff cell mappings:
    unmapped dff cell: $_DFF_N_
    \sky130_fd_sc_hd__dfxtp_2 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    unmapped dff cell: $_DFF_NN0_
    unmapped dff cell: $_DFF_NN1_
    unmapped dff cell: $_DFF_NP0_
    unmapped dff cell: $_DFF_NP1_
    \sky130_fd_sc_hd__dfrtp_2 _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .RESET_B( R));
    \sky130_fd_sc_hd__dfstp_2 _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .SET_B( R));
    unmapped dff cell: $_DFF_PP0_
    unmapped dff cell: $_DFF_PP1_
    \sky130_fd_sc_hd__dfbbn_2 _DFFSR_NNN_ (.CLK_N( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B( S));
    unmapped dff cell: $_DFFSR_NNP_
    unmapped dff cell: $_DFFSR_NPN_
    unmapped dff cell: $_DFFSR_NPP_
    unmapped dff cell: $_DFFSR_PNN_
    unmapped dff cell: $_DFFSR_PNP_
    unmapped dff cell: $_DFFSR_PPN_
    unmapped dff cell: $_DFFSR_PPP_

92.1. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).
Mapping DFF cells in module `\counter_8bit':
  mapped 8 $_DFF_PN0_ cells to \sky130_fd_sc_hd__dfrtp_2 cells.
{
   "creator": "Yosys 0.46 (git sha1 e97731b9dda91fa5fa53ed87df7c34163ba59a41, clang++ 17.0.6 -fPIC -O3)",
   "invocation": "stat -json -liberty /home/lroot/count/runs/RUN_2025-02-20_02-26-26/tmp/82f433987e354a1c9e1732cdc8ef5a53.lib ",
   "modules": {
      "\\counter_8bit": {
         "num_wires":         603,
         "num_wire_bits":     639,
         "num_pub_wires":     4,
         "num_pub_wire_bits": 26,
         "num_ports":         3,
         "num_port_bits":     18,
         "num_memories":      0,
         "num_memory_bits":   0,
         "num_processes":     0,
         "num_cells":         629,
         "area":              210.201600,
         "num_cells_by_type": {
            "$_ANDNOT_": 45,
            "$_AND_": 5,
            "$_MUX_": 494,
            "$_NAND_": 6,
            "$_NOR_": 4,
            "$_NOT_": 15,
            "$_ORNOT_": 5,
            "$_OR_": 39,
            "$_XNOR_": 1,
            "$_XOR_": 7,
            "sky130_fd_sc_hd__dfrtp_2": 8
         }
      }
   },
      "design": {
         "num_wires":         603,
         "num_wire_bits":     639,
         "num_pub_wires":     4,
         "num_pub_wire_bits": 26,
         "num_ports":         3,
         "num_port_bits":     18,
         "num_memories":      0,
         "num_memory_bits":   0,
         "num_processes":     0,
         "num_cells":         629,
         "area":              210.201600,
         "num_cells_by_type": {
            "$_ANDNOT_": 45,
            "$_AND_": 5,
            "$_MUX_": 494,
            "$_NAND_": 6,
            "$_NOR_": 4,
            "$_NOT_": 15,
            "$_ORNOT_": 5,
            "$_OR_": 39,
            "$_XNOR_": 1,
            "$_XOR_": 7,
            "sky130_fd_sc_hd__dfrtp_2": 8
         }
      }
}

93. Printing statistics.

=== counter_8bit ===

   Number of wires:                603
   Number of wire bits:            639
   Number of public wires:           4
   Number of public wire bits:      26
   Number of ports:                  3
   Number of port bits:             18
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                629
     $_ANDNOT_                      45
     $_AND_                          5
     $_MUX_                        494
     $_NAND_                         6
     $_NOR_                          4
     $_NOT_                         15
     $_ORNOT_                        5
     $_OR_                          39
     $_XNOR_                         1
     $_XOR_                          7
     sky130_fd_sc_hd__dfrtp_2        8

   Area for cell type $_NOT_ is unknown!
   Area for cell type $_AND_ is unknown!
   Area for cell type $_NAND_ is unknown!
   Area for cell type $_OR_ is unknown!
   Area for cell type $_NOR_ is unknown!
   Area for cell type $_XOR_ is unknown!
   Area for cell type $_XNOR_ is unknown!
   Area for cell type $_ANDNOT_ is unknown!
   Area for cell type $_ORNOT_ is unknown!
   Area for cell type $_MUX_ is unknown!

   Chip area for module '\counter_8bit': 210.201600
     of which used for sequential elements: 210.201600 (100.00%)

[INFO] Using generated ABC script '/home/lroot/count/runs/RUN_2025-02-20_02-26-26/06-yosys-synthesis/AREA_0.abc'â€¦

94. Executing ABC pass (technology mapping using ABC).

94.1. Extracting gate netlist of module `\counter_8bit' to `/tmp/yosys-abc-QnapkI/input.blif'..
Extracted 621 gates and 630 wires to a netlist network with 9 inputs and 32 outputs.

94.1.1. Executing ABC.
Running ABC command: "/nix/store/6l3aj1gi4lja8z5s4lan2k2cfz9mqkrz-yosys-abc/bin/abc" -s -f /tmp/yosys-abc-QnapkI/abc.script 2>&1
ABC: ABC command line: "source /tmp/yosys-abc-QnapkI/abc.script".
ABC: 
ABC: + read_blif /tmp/yosys-abc-QnapkI/input.blif 
ABC: + read_lib -w /home/lroot/count/runs/RUN_2025-02-20_02-26-26/tmp/82f433987e354a1c9e1732cdc8ef5a53.lib 
ABC: Parsing finished successfully.  Parsing time =     0.05 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Library "sky130_fd_sc_hd__tt_025C_1v80" from "/home/lroot/count/runs/RUN_2025-02-20_02-26-26/tmp/82f433987e354a1c9e1732cdc8ef5a53.lib" has 175 cells (17 skipped: 14 seq; 3 tri-state; 0 no func; 0 dont_use).  Time =     0.09 sec
ABC: Memory =    9.54 MB. Time =     0.09 sec
ABC: Warning: Detected 2 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + read_constr -v /home/lroot/count/runs/RUN_2025-02-20_02-26-26/06-yosys-synthesis/synthesis.abc.sdc 
ABC: Setting driving cell to be "sky130_fd_sc_hd__inv_2/Y".
ABC: Setting output load to be 33.442001.
ABC: + source /home/lroot/count/runs/RUN_2025-02-20_02-26-26/06-yosys-synthesis/AREA_0.abc 
ABC: Error: The network is combinational.
ABC: Cannot find the default PI driving cell (sky130_fd_sc_hd__inv_2/Y) in the library.
ABC: WireLoad = "none"  Gates =    407 (  4.4 %)   Cap = 11.2 ff (  1.6 %)   Area =     3553.41 ( 93.1 %)   Delay =  2234.34 ps  (  3.2 %)               
ABC: Path  0 --       1 : 0   47 pi                        A =   0.00  Df =   0.0   -0.0 ps  S =   0.0 ps  Cin =  0.0 ff  Cout = 144.0 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --      54 : 2   12 sky130_fd_sc_hd__xnor2_2  A =  16.27  Df = 439.6 -220.5 ps  S = 548.5 ps  Cin =  8.5 ff  Cout =  41.8 ff  Cmax = 121.8 ff  G =  469  
ABC: Path  2 --      55 : 1   12 sky130_fd_sc_hd__inv_2    A =   3.75  Df = 729.5 -190.3 ps  S = 333.3 ps  Cin =  4.5 ff  Cout =  72.4 ff  Cmax = 331.4 ff  G = 1585  
ABC: Path  3 --     312 : 4    1 sky130_fd_sc_hd__a211o_2  A =  10.01  Df =1111.3 -389.1 ps  S =  45.0 ps  Cin =  2.4 ff  Cout =   2.5 ff  Cmax = 325.0 ff  G =  100  
ABC: Path  4 --     314 : 4    2 sky130_fd_sc_hd__a22o_2   A =  10.01  Df =1373.2 -507.7 ps  S =  52.9 ps  Cin =  2.3 ff  Cout =   6.4 ff  Cmax = 301.2 ff  G =  261  
ABC: Path  5 --     315 : 4    1 sky130_fd_sc_hd__o2bb2a_2 A =  11.26  Df =1618.0 -598.6 ps  S =  39.5 ps  Cin =  1.8 ff  Cout =   1.6 ff  Cmax = 294.8 ff  G =   86  
ABC: Path  6 --     316 : 3    1 sky130_fd_sc_hd__and3_2   A =   7.51  Df =1823.3 -630.8 ps  S =  52.1 ps  Cin =  1.5 ff  Cout =   4.6 ff  Cmax = 309.5 ff  G =  293  
ABC: Path  7 --     321 : 4    1 sky130_fd_sc_hd__a22oi_2  A =  12.51  Df =2234.3 -490.0 ps  S = 456.2 ps  Cin =  4.3 ff  Cout =  33.4 ff  Cmax = 170.3 ff  G =  780  
ABC: Start-point = pi0 (\tcount [0]).  End-point = po8 (\sine_out [6]).
ABC: netlist                       : i/o =    9/   32  lat =    0  nd =   407  edge =   1268  area =3553.96  delay = 7.00  lev = 7
ABC: + write_blif /tmp/yosys-abc-QnapkI/output.blif 

94.1.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__and2b_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__xor2_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nand3b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nor3b_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__nor3_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__a221oi_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nand2b_2 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__o21bai_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a211oi_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o32a_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a41o_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o221ai_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__and4_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__and4b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o21ba_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__o32ai_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nor4_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o22a_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__or4b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__and4bb_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a22oi_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a2bb2o_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a221o_2 cells:        9
ABC RESULTS:   sky130_fd_sc_hd__a32o_2 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__and3b_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__a21bo_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__o41a_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__o211ai_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o211a_2 cells:       13
ABC RESULTS:   sky130_fd_sc_hd__o31a_2 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__or4_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__and3_2 cells:       11
ABC RESULTS:   sky130_fd_sc_hd__o2bb2a_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__or3b_2 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__o2111a_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a31oi_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__a21o_2 cells:       20
ABC RESULTS:   sky130_fd_sc_hd__o311a_2 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__a311o_2 cells:       12
ABC RESULTS:   sky130_fd_sc_hd__o21ai_2 cells:       12
ABC RESULTS:   sky130_fd_sc_hd__a211o_2 cells:       17
ABC RESULTS:   sky130_fd_sc_hd__o31ai_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o221a_2 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__a22o_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__o21a_2 cells:        9
ABC RESULTS:   sky130_fd_sc_hd__mux2_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__a32oi_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or3_2 cells:       16
ABC RESULTS:   sky130_fd_sc_hd__a21oi_2 cells:       23
ABC RESULTS:   sky130_fd_sc_hd__nor2_2 cells:       29
ABC RESULTS:   sky130_fd_sc_hd__nand2_2 cells:       44
ABC RESULTS:   sky130_fd_sc_hd__or2_2 cells:       17
ABC RESULTS:   sky130_fd_sc_hd__a31o_2 cells:       29
ABC RESULTS:   sky130_fd_sc_hd__and2_2 cells:       11
ABC RESULTS:   sky130_fd_sc_hd__xnor2_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__inv_2 cells:       18
ABC RESULTS:        internal signals:      589
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:       32
Removing temp directory.

95. Executing SETUNDEF pass (replace undef values with defined constants).

96. Executing HILOMAP pass (mapping to constant drivers).

97. Executing SPLITNETS pass (splitting up multi-bit signals).

98. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \counter_8bit..
Removed 0 unused cells and 638 unused wires.
<suppressed ~1 debug messages>

99. Executing INSBUF pass (insert buffer cells for connected wires).

100. Executing CHECK pass (checking for obvious problems).
Checking module counter_8bit...
Found and reported 0 problems.
{
   "creator": "Yosys 0.46 (git sha1 e97731b9dda91fa5fa53ed87df7c34163ba59a41, clang++ 17.0.6 -fPIC -O3)",
   "invocation": "stat -json -liberty /home/lroot/count/runs/RUN_2025-02-20_02-26-26/tmp/82f433987e354a1c9e1732cdc8ef5a53.lib ",
   "modules": {
      "\\counter_8bit": {
         "num_wires":         402,
         "num_wire_bits":     417,
         "num_pub_wires":     11,
         "num_pub_wire_bits": 26,
         "num_ports":         3,
         "num_port_bits":     18,
         "num_memories":      0,
         "num_memory_bits":   0,
         "num_processes":     0,
         "num_cells":         415,
         "area":              3763.609600,
         "num_cells_by_type": {
            "sky130_fd_sc_hd__a211o_2": 17,
            "sky130_fd_sc_hd__a211oi_2": 1,
            "sky130_fd_sc_hd__a21bo_2": 5,
            "sky130_fd_sc_hd__a21o_2": 20,
            "sky130_fd_sc_hd__a21oi_2": 23,
            "sky130_fd_sc_hd__a221o_2": 9,
            "sky130_fd_sc_hd__a221oi_2": 1,
            "sky130_fd_sc_hd__a22o_2": 5,
            "sky130_fd_sc_hd__a22oi_2": 1,
            "sky130_fd_sc_hd__a2bb2o_2": 2,
            "sky130_fd_sc_hd__a311o_2": 12,
            "sky130_fd_sc_hd__a31o_2": 29,
            "sky130_fd_sc_hd__a31oi_2": 3,
            "sky130_fd_sc_hd__a32o_2": 6,
            "sky130_fd_sc_hd__a32oi_2": 1,
            "sky130_fd_sc_hd__a41o_2": 1,
            "sky130_fd_sc_hd__and2_2": 11,
            "sky130_fd_sc_hd__and2b_2": 5,
            "sky130_fd_sc_hd__and3_2": 11,
            "sky130_fd_sc_hd__and3b_2": 4,
            "sky130_fd_sc_hd__and4_2": 1,
            "sky130_fd_sc_hd__and4b_2": 1,
            "sky130_fd_sc_hd__and4bb_2": 2,
            "sky130_fd_sc_hd__dfrtp_2": 8,
            "sky130_fd_sc_hd__inv_2": 18,
            "sky130_fd_sc_hd__mux2_1": 3,
            "sky130_fd_sc_hd__nand2_2": 44,
            "sky130_fd_sc_hd__nand2b_2": 7,
            "sky130_fd_sc_hd__nand3b_2": 1,
            "sky130_fd_sc_hd__nor2_2": 29,
            "sky130_fd_sc_hd__nor3_2": 3,
            "sky130_fd_sc_hd__nor3b_2": 2,
            "sky130_fd_sc_hd__nor4_2": 1,
            "sky130_fd_sc_hd__o2111a_2": 2,
            "sky130_fd_sc_hd__o211a_2": 13,
            "sky130_fd_sc_hd__o211ai_2": 2,
            "sky130_fd_sc_hd__o21a_2": 9,
            "sky130_fd_sc_hd__o21ai_2": 12,
            "sky130_fd_sc_hd__o21ba_2": 4,
            "sky130_fd_sc_hd__o21bai_2": 2,
            "sky130_fd_sc_hd__o221a_2": 6,
            "sky130_fd_sc_hd__o221ai_2": 1,
            "sky130_fd_sc_hd__o22a_2": 3,
            "sky130_fd_sc_hd__o2bb2a_2": 3,
            "sky130_fd_sc_hd__o311a_2": 8,
            "sky130_fd_sc_hd__o31a_2": 6,
            "sky130_fd_sc_hd__o31ai_2": 2,
            "sky130_fd_sc_hd__o32a_2": 1,
            "sky130_fd_sc_hd__o32ai_2": 1,
            "sky130_fd_sc_hd__o41a_2": 3,
            "sky130_fd_sc_hd__or2_2": 17,
            "sky130_fd_sc_hd__or3_2": 16,
            "sky130_fd_sc_hd__or3b_2": 7,
            "sky130_fd_sc_hd__or4_2": 4,
            "sky130_fd_sc_hd__or4b_2": 1,
            "sky130_fd_sc_hd__xnor2_2": 4,
            "sky130_fd_sc_hd__xor2_2": 1
         }
      }
   },
      "design": {
         "num_wires":         402,
         "num_wire_bits":     417,
         "num_pub_wires":     11,
         "num_pub_wire_bits": 26,
         "num_ports":         3,
         "num_port_bits":     18,
         "num_memories":      0,
         "num_memory_bits":   0,
         "num_processes":     0,
         "num_cells":         415,
         "area":              3763.609600,
         "num_cells_by_type": {
            "sky130_fd_sc_hd__a211o_2": 17,
            "sky130_fd_sc_hd__a211oi_2": 1,
            "sky130_fd_sc_hd__a21bo_2": 5,
            "sky130_fd_sc_hd__a21o_2": 20,
            "sky130_fd_sc_hd__a21oi_2": 23,
            "sky130_fd_sc_hd__a221o_2": 9,
            "sky130_fd_sc_hd__a221oi_2": 1,
            "sky130_fd_sc_hd__a22o_2": 5,
            "sky130_fd_sc_hd__a22oi_2": 1,
            "sky130_fd_sc_hd__a2bb2o_2": 2,
            "sky130_fd_sc_hd__a311o_2": 12,
            "sky130_fd_sc_hd__a31o_2": 29,
            "sky130_fd_sc_hd__a31oi_2": 3,
            "sky130_fd_sc_hd__a32o_2": 6,
            "sky130_fd_sc_hd__a32oi_2": 1,
            "sky130_fd_sc_hd__a41o_2": 1,
            "sky130_fd_sc_hd__and2_2": 11,
            "sky130_fd_sc_hd__and2b_2": 5,
            "sky130_fd_sc_hd__and3_2": 11,
            "sky130_fd_sc_hd__and3b_2": 4,
            "sky130_fd_sc_hd__and4_2": 1,
            "sky130_fd_sc_hd__and4b_2": 1,
            "sky130_fd_sc_hd__and4bb_2": 2,
            "sky130_fd_sc_hd__dfrtp_2": 8,
            "sky130_fd_sc_hd__inv_2": 18,
            "sky130_fd_sc_hd__mux2_1": 3,
            "sky130_fd_sc_hd__nand2_2": 44,
            "sky130_fd_sc_hd__nand2b_2": 7,
            "sky130_fd_sc_hd__nand3b_2": 1,
            "sky130_fd_sc_hd__nor2_2": 29,
            "sky130_fd_sc_hd__nor3_2": 3,
            "sky130_fd_sc_hd__nor3b_2": 2,
            "sky130_fd_sc_hd__nor4_2": 1,
            "sky130_fd_sc_hd__o2111a_2": 2,
            "sky130_fd_sc_hd__o211a_2": 13,
            "sky130_fd_sc_hd__o211ai_2": 2,
            "sky130_fd_sc_hd__o21a_2": 9,
            "sky130_fd_sc_hd__o21ai_2": 12,
            "sky130_fd_sc_hd__o21ba_2": 4,
            "sky130_fd_sc_hd__o21bai_2": 2,
            "sky130_fd_sc_hd__o221a_2": 6,
            "sky130_fd_sc_hd__o221ai_2": 1,
            "sky130_fd_sc_hd__o22a_2": 3,
            "sky130_fd_sc_hd__o2bb2a_2": 3,
            "sky130_fd_sc_hd__o311a_2": 8,
            "sky130_fd_sc_hd__o31a_2": 6,
            "sky130_fd_sc_hd__o31ai_2": 2,
            "sky130_fd_sc_hd__o32a_2": 1,
            "sky130_fd_sc_hd__o32ai_2": 1,
            "sky130_fd_sc_hd__o41a_2": 3,
            "sky130_fd_sc_hd__or2_2": 17,
            "sky130_fd_sc_hd__or3_2": 16,
            "sky130_fd_sc_hd__or3b_2": 7,
            "sky130_fd_sc_hd__or4_2": 4,
            "sky130_fd_sc_hd__or4b_2": 1,
            "sky130_fd_sc_hd__xnor2_2": 4,
            "sky130_fd_sc_hd__xor2_2": 1
         }
      }
}

101. Printing statistics.

=== counter_8bit ===

   Number of wires:                402
   Number of wire bits:            417
   Number of public wires:          11
   Number of public wire bits:      26
   Number of ports:                  3
   Number of port bits:             18
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                415
     sky130_fd_sc_hd__a211o_2       17
     sky130_fd_sc_hd__a211oi_2       1
     sky130_fd_sc_hd__a21bo_2        5
     sky130_fd_sc_hd__a21o_2        20
     sky130_fd_sc_hd__a21oi_2       23
     sky130_fd_sc_hd__a221o_2        9
     sky130_fd_sc_hd__a221oi_2       1
     sky130_fd_sc_hd__a22o_2         5
     sky130_fd_sc_hd__a22oi_2        1
     sky130_fd_sc_hd__a2bb2o_2       2
     sky130_fd_sc_hd__a311o_2       12
     sky130_fd_sc_hd__a31o_2        29
     sky130_fd_sc_hd__a31oi_2        3
     sky130_fd_sc_hd__a32o_2         6
     sky130_fd_sc_hd__a32oi_2        1
     sky130_fd_sc_hd__a41o_2         1
     sky130_fd_sc_hd__and2_2        11
     sky130_fd_sc_hd__and2b_2        5
     sky130_fd_sc_hd__and3_2        11
     sky130_fd_sc_hd__and3b_2        4
     sky130_fd_sc_hd__and4_2         1
     sky130_fd_sc_hd__and4b_2        1
     sky130_fd_sc_hd__and4bb_2       2
     sky130_fd_sc_hd__dfrtp_2        8
     sky130_fd_sc_hd__inv_2         18
     sky130_fd_sc_hd__mux2_1         3
     sky130_fd_sc_hd__nand2_2       44
     sky130_fd_sc_hd__nand2b_2       7
     sky130_fd_sc_hd__nand3b_2       1
     sky130_fd_sc_hd__nor2_2        29
     sky130_fd_sc_hd__nor3_2         3
     sky130_fd_sc_hd__nor3b_2        2
     sky130_fd_sc_hd__nor4_2         1
     sky130_fd_sc_hd__o2111a_2       2
     sky130_fd_sc_hd__o211a_2       13
     sky130_fd_sc_hd__o211ai_2       2
     sky130_fd_sc_hd__o21a_2         9
     sky130_fd_sc_hd__o21ai_2       12
     sky130_fd_sc_hd__o21ba_2        4
     sky130_fd_sc_hd__o21bai_2       2
     sky130_fd_sc_hd__o221a_2        6
     sky130_fd_sc_hd__o221ai_2       1
     sky130_fd_sc_hd__o22a_2         3
     sky130_fd_sc_hd__o2bb2a_2       3
     sky130_fd_sc_hd__o311a_2        8
     sky130_fd_sc_hd__o31a_2         6
     sky130_fd_sc_hd__o31ai_2        2
     sky130_fd_sc_hd__o32a_2         1
     sky130_fd_sc_hd__o32ai_2        1
     sky130_fd_sc_hd__o41a_2         3
     sky130_fd_sc_hd__or2_2         17
     sky130_fd_sc_hd__or3_2         16
     sky130_fd_sc_hd__or3b_2         7
     sky130_fd_sc_hd__or4_2          4
     sky130_fd_sc_hd__or4b_2         1
     sky130_fd_sc_hd__xnor2_2        4
     sky130_fd_sc_hd__xor2_2         1

   Chip area for module '\counter_8bit': 3763.609600
     of which used for sequential elements: 210.201600 (5.59%)

102. Executing Verilog backend.
Dumping module `\counter_8bit'.

103. Executing JSON backend.
